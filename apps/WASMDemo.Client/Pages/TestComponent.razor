@using WASMDemo.Shared.Data.Models
@using Sitko.Core.Repository
@inherits Sitko.Core.Blazor.Components.BaseStateComponent<TestState>

<h1>Total items from state: @State.TotalItems</h1>
<h1>Total items without state: @TotalItemsWithoutState</h1>
<h1>Loaded cnt: @LoadedCnt</h1>

<MudText>
    Если рефрешнуть страницу, а потом нажать "загрузить ещё" - Total items without state станет равным 10, хотя должно быть 50
</MudText>
<MudText>
    Если рефрешнуть страницу, а потом перейти на другую страницу - Total items from state станет равным 10, хотя должно быть 50
</MudText>

<MudButton OnClick="@LoadMore">Загрузить ещё</MudButton>

@code {

    [Inject]
    public IRepository<TestEntity, Guid> Repository { get; set; } = null!;

    private int TotalItemsWithoutState { get; set; }
    private int PageSize { get; set; } = 10;
    private int Offset { get; set; } = 0;
    private int LoadedCnt { get; set; } = 10;

    private async Task GetData()
    {
        var result = await Repository.GetAllAsync(q => { q.Skip(Offset).Take(PageSize); });
        TotalItemsWithoutState = result.itemsCount;
        LoadedCnt += PageSize;
    }

    private async Task LoadMore()
    {
        Offset++;
        await GetData();
    }

    protected override async Task<TestState> LoadStateAsync()
    {
        var result = await Repository.GetAllAsync(q => { q.Skip(Offset).Take(PageSize); });
        return new TestState
        {
            TotalItems = result.itemsCount
        };
    }

}
